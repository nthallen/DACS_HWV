%{
  /* ctr_conv.tmc generated by gen_ctr.pl */
  const char *CtrOvf_text[] = { "  ", " *", "* ", "**" };
  const char *CtrLatch_text[] = { "  ", " L", "S ", "SL" };
%}
TM typedef unsigned char CtrOvf { text "%2d" CtrOvf_text[]; }
TM typedef unsigned char CtrLatch { text "%2d" CtrLatch_text[]; }

CtrLatch Ct0Latch; invalidate Ct0Latch;
{ Ct0Latch = (Ct0Stat >> 14) & 3; Validate Ct0Latch; }
CtrOvf Ct0AOvf; invalidate Ct0AOvf;
{ Ct0AOvf = ((Ct0Stat >> 0) & 1) + ((Ct0Stat >> (0+3)) & 2);
  Validate Ct0AOvf; }
CtrOvf Ct0BOvf; invalidate Ct0BOvf;
{ Ct0BOvf = ((Ct0Stat >> 1) & 1) + ((Ct0Stat >> (1+3)) & 2);
  Validate Ct0BOvf; }
CtrOvf Ct0COvf; invalidate Ct0COvf;
{ Ct0COvf = ((Ct0Stat >> 2) & 1) + ((Ct0Stat >> (2+3)) & 2);
  Validate Ct0COvf; }
CtrOvf Ct0DOvf; invalidate Ct0DOvf;
{ Ct0DOvf = ((Ct0Stat >> 3) & 1) + ((Ct0Stat >> (3+3)) & 2);
  Validate Ct0DOvf; }
CtrLatch Ct1Latch; invalidate Ct1Latch;
{ Ct1Latch = (Ct1Stat >> 14) & 3; Validate Ct1Latch; }
CtrOvf Ct1AOvf; invalidate Ct1AOvf;
{ Ct1AOvf = ((Ct1Stat >> 0) & 1) + ((Ct1Stat >> (0+3)) & 2);
  Validate Ct1AOvf; }
CtrOvf Ct1BOvf; invalidate Ct1BOvf;
{ Ct1BOvf = ((Ct1Stat >> 1) & 1) + ((Ct1Stat >> (1+3)) & 2);
  Validate Ct1BOvf; }
CtrOvf Ct1COvf; invalidate Ct1COvf;
{ Ct1COvf = ((Ct1Stat >> 2) & 1) + ((Ct1Stat >> (2+3)) & 2);
  Validate Ct1COvf; }
CtrOvf Ct1DOvf; invalidate Ct1DOvf;
{ Ct1DOvf = ((Ct1Stat >> 3) & 1) + ((Ct1Stat >> (3+3)) & 2);
  Validate Ct1DOvf; }
CtrLatch Ct2Latch; invalidate Ct2Latch;
{ Ct2Latch = (Ct2Stat >> 14) & 3; Validate Ct2Latch; }
CtrOvf Ct2AOvf; invalidate Ct2AOvf;
{ Ct2AOvf = ((Ct2Stat >> 0) & 1) + ((Ct2Stat >> (0+3)) & 2);
  Validate Ct2AOvf; }
CtrOvf Ct2BOvf; invalidate Ct2BOvf;
{ Ct2BOvf = ((Ct2Stat >> 1) & 1) + ((Ct2Stat >> (1+3)) & 2);
  Validate Ct2BOvf; }
CtrOvf Ct2COvf; invalidate Ct2COvf;
{ Ct2COvf = ((Ct2Stat >> 2) & 1) + ((Ct2Stat >> (2+3)) & 2);
  Validate Ct2COvf; }
CtrOvf Ct2DOvf; invalidate Ct2DOvf;
{ Ct2DOvf = ((Ct2Stat >> 3) & 1) + ((Ct2Stat >> (3+3)) & 2);
  Validate Ct2DOvf; }
